@use '../abstracts/variables' as*;

@mixin generar-grid-rows($total-rows, $fr , $gutter-width) {
  display: grid;
  grid-template-rows: repeat($total-rows, $fr);
  gap: $gutter-width;
}

@mixin generar-grid-custom($column-sizes, $gutter-width) {
  display: grid;
  grid-template-columns: $column-sizes;
  gap: $gutter-width;
}

@mixin span($start, $col-span) {
  grid-column-start: $start;
  grid-column-end: span $col-span;
}

@mixin center-fixed($width) {
  position: fixed;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  margin: 0;
  width: $width;
  z-index: 1000;
}

@mixin button($color , $text-color, $font-size , $width , $padding , $display) {
  display: $display;
  width: $width;
  padding: $padding;
  margin: auto;
  background-color: $color;
  color: $text-color;
  border: none;
  border-radius: 20px;
  font-size: $font-size;
}

@mixin NavItem($color , $font-family , $color-hover) {
  ul {
    max-width: 90%;
    height: 80px;
    display: flex;
    justify-content: space-between;
    margin: auto;

    li {
      list-style: none;
      margin: auto;

      a {
        outline: none;
        text-decoration: none;
        color: $color;
        font-family: $font-family;
      }

      a:hover {
        padding: 28px 0px;
        color: $color-hover;
        border-bottom: solid $color-hover;
        transition: height 0.3s ease;
      }
    }
  }
}

@mixin animation-primary($duration , $delay) {
  visibility: visible;
  animation-name: fadeInUp;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: both;
}

@mixin animation-left($duration , $delay) {
  visibility: visible;
  animation-name: fadeInLeft;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: both;
}

@mixin animation-right($duration , $delay) {
  visibility: visible;
  animation-name: fadeInRight;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: both;
}

@mixin reverse-animation($duration , $delay) {
  visibility: visible;
  animation-name: reverseFadeInUp;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: both;
}

@mixin typing ($letter-spacing) {
  white-space: nowrap;
  margin: 0 auto;
  letter-spacing: $letter-spacing ;
  animation:
    typing 3.5s steps(40, end),
    blink-caret .75s step-end infinite;
}

@mixin zoomAnimation ($duration , $type) {
  animation: zoom $duration $type;
}

@mixin levitar($duration , $type) {
  animation: transition_levitar $duration $type;
}

@mixin levitarY($duration , $type) {
  animation: transitionY $duration $type;
}

@keyframes typing {
  from {
    width: 0
  }

  to {
    width: 100%
  }
}

@keyframes blink-caret {

  from,
  to {
    border-color: transparent
  }

  50% {
    border-color: orange;
  }
}


@keyframes fadeInUp {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }

  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes reverseFadeInUp {
  0% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }

  100% {
    opacity: 0;
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes fadeInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }

  100% {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInRight {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes zoom {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(1.1);
  }
}

@keyframes transition_levitar {
  0% {
    transform: translate(50%);
  }

  50% {
    transform: translate(300%, -50px);
  }

  100% {
    transform: translate(50%);
  }
}

@keyframes transitionY {
  0% {
    transform: translate(0);
  }

  50% {
    transform: translateY(15px);
  }

  100% {
    transform: translate(0);
  }
}